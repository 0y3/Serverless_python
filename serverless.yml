service: locker-service-python-http-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  # region: us-east-1
  # stage: "dev"
  stage: ${opt:stage, self:custom.defaultEnv} # ${opt:stage, self:custom.defaultStage} which means that we can pass the value of stage while running command serverless deploy or it will user the default stage. e.g if you write serverless deploy --stage staging o it will be translated to stage: staging
  region: ${self:custom.${self:provider.stage}.region}
  # profile: ${opt:profile, self:custom.${self:provider.stage}.profile} 
  timeout: 10
  memorySize: 128

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
  currentTime:
    handler: handler.currentTime
    events:
      - httpApi:
          path: /time
          method: get
  getAllPackage:
    handler: handler.getAllPackage
    events:
      - httpApi:
          path: /package
          method: get
  getAllPackageCountByStatus:
    handler: handler.getAllPackageCountByStatus
    events:
      - httpApi:
          path: /package/countbystatus/{id}
          method: get
  savePackage:
    handler: handler.savePackage
    events:
      - httpApi:
          path: /package
          method: post
  # getAllUsers:
  #   handler: handler.getAllUsers
  #   events:
  #     - http:
  #         path: users
  #         method: get

plugins:
  - serverless-python-requirements
  - serverless-offline

custom:
  defaultEnv: dev #Env Specific Variables

  dev:
    region: us-east-1
    profile: dev
  staging:
    region: af-south-1
    profile: staging
  prod:
    region: af-south-1
    profile: prod

  pythonRequirements:
    dockerizePip: non-linux